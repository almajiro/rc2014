              	; --------------------------------------
              	; zasm: assemble "program31.asm"
              	; date: 2018-02-12 18:19:46
              	; --------------------------------------


              	;--------------------------------------
              	;   演習プログラム30
              	;--------------------------------------
0090:         	CW      EQU     90H             ; コントロールワード
00F3:         	CWR     EQU     0F3H            ; コントロールワードレジスタ
00F0:         	PADR    EQU     0F0H            ; PORTAレジスタ
00F1:         	PBDR    EQU     0F1H            ; PORTBレジスタ
00F2:         	PCDR    EQU     0F2H            ; PORTCレジスタ
C200:         	SP_A    EQU     0C200H          ; SP
              	
C000:         	        ORG     0C000H
C000: 3E90    	        LD      A, CW           ; コントロールワードをAレジスタへ
C002: D3F3    	        OUT     (CWR), A        ; コントロールワードレジスタへ出力
C004: 3100C2  	        LD      SP, SP_A
              	
C007: 3E01    	LOOP:	LD	A, 01H
C009: D3F1    		OUT     (PBDR), A
C00B: 0601    		LD	B, 01H 	        ; 表示中のセグメント
              	
C00D: DBF0    		IN	A, (PADR)
C00F: 5F      		LD	E, A	        ; 動く方向の選択
              					; 1 右回り
              					; 0 左回り
              	
C010: CB43    		BIT	0, E
C012: 3E01    		LD	A, 01H		; 表示パターン
C014: C219C0  		JP	NZ, ACTION
C017: 3E20    		LD	A, 20H		; 表示パターン
              	
C019: 0E04    	ACTION:	LD      C, 04H          ; カウンタ
              	
C01B: D3F2    	CNT:    OUT     (PCDR), A       ; 表示パターンの変更
C01D: CD84C0  	        CALL    TIM3
              	
C020: CB47    	CHK1:   BIT     0, A            ; 01Hの時
C022: CA3AC0  	        JP      Z, CHK2
              	
C025: 0D      	        DEC     C
C026: CA54C0  	        JP      Z, NEXT         ; カウンタが0の場合
              	
C029: CB43    	        BIT     0, E
C02B: CA34C0  	        JP      Z, CHK1S
C02E: CD7BC0  	        CALL    SEGR
C031: C31BC0  	        JP      CNT
C034: CD72C0  	CHK1S:  CALL    SEGL
C037: C31BC0  	        JP      CNT
              	        
C03A: CB5F    	CHK2:   BIT     3, A            ; 08Hの時
C03C: CA54C0  	        JP      Z, NEXT
              	
C03F: 0D      	        DEC     C
C040: CA54C0  	        JP      Z, NEXT         ; カウンタが0の場合
              	
C043: CB43    	        BIT     0, E
C045: CA4EC0  	        JP      Z, CHK2S
C048: CD72C0  	        CALL    SEGL
C04B: C31BC0  	        JP      CNT
C04E: CD7BC0  	CHK2S:  CALL    SEGR
C051: C31BC0  	        JP      CNT
              	
              	; 次のパターンへの準備
C054: CB43    	NEXT:   BIT     0, E            ; 方向の判定
C056: CA64C0  	        JP      Z, PRE
C059: CB27    	        SLA     A               ; 左へビットシフト
C05B: 1640    	        LD      D, 40H
C05D: BA      	        CP      D
C05E: CA07C0  	        JP      Z, LOOP         ; パターンのシフトが終わったらLOOPへ
C061: C36CC0  	        JP      GNEXT           ; 次のパターンへ (CNT)
              	
C064: CB3F    	PRE:    SRL     A
C066: C26CC0  	        JP      NZ, GNEXT       ; 次のパターンへ (CNT)
C069: CA07C0  	        JP      Z, LOOP         ; パターンのシフトが終わったらLOOPへ
              	
C06C: 0E04    	GNEXT:  LD      C, 04H
C06E: C31BC0  	        JP      CNT
              	
C071: C9      	        RET
              	
              	; その他のサブルーチン
              	; 左へセグメントをシフト
C072: F5      	SEGL:   PUSH    AF
C073: 78      	        LD      A, B
C074: CB3F    	        SRL     A
C076: D3F1    	        OUT     (PBDR), A
C078: 47      	        LD      B, A
C079: F1      	        POP     AF
C07A: C9      	        RET
              	
              	; 右へセグメントをシフト
C07B: F5      	SEGR:   PUSH    AF
C07C: 78      	        LD      A, B
C07D: CB27    	        SLA     A
C07F: D3F1    	        OUT     (PBDR), A
C081: 47      	        LD      B,A
C082: F1      	        POP     AF
C083: C9      	        RET
              	
              	; タイマールーチン
C084: 1605    	TIM3:   LD      D, 5D
C086: C5      	        PUSH    BC
C087: D5      	        PUSH    DE
C088: CD92C0  	DLOOP3: CALL    TIM2
C08B: 15      	        DEC     D
C08C: C288C0  	        JP      NZ, DLOOP3
C08F: D1      	        POP     DE
C090: C1      	        POP     BC
C091: C9      	        RET
              	
              	; 10ms Delay
C092: 0E64    	TIM2:   LD      C, 100D 
C094: CD9EC0  	DLOOP2: CALL    TIM1
C097: 0D      	        DEC     C
C098: 00      	        NOP
C099: 00      	        NOP
C09A: C294C0  	        JP      NZ, DLOOP2
C09D: C9      	        RET
              	
              	; 100ns Delay
C09E: 061F    	TIM1:   LD      B, 31D
C0A0: 05      	DLOOP1: DEC     B 
C0A1: 00      	        NOP 
C0A2: 00      	        NOP
C0A3: C2A0C0  	        JP      NZ, DLOOP1
C0A6: C9      	        RET
              	
              	        END 


; +++ segments +++

#CODE          = $C000 = 49152,  size = $00A7 =   167

; +++ global symbols +++

ACTION  = $C019 = 49177          program31.asm:30
CHK1    = $C020 = 49184          program31.asm:35 (unused)
CHK1S   = $C034 = 49204          program31.asm:45
CHK2    = $C03A = 49210          program31.asm:48
CHK2S   = $C04E = 49230          program31.asm:58
CNT     = $C01B = 49179          program31.asm:32
CW      = $0090 =   144          program31.asm:4
CWR     = $00F3 =   243          program31.asm:5
DLOOP1  = $C0A0 = 49312          program31.asm:120
DLOOP2  = $C094 = 49300          program31.asm:111
DLOOP3  = $C088 = 49288          program31.asm:102
GNEXT   = $C06C = 49260          program31.asm:74
LOOP    = $C007 = 49159          program31.asm:16
NEXT    = $C054 = 49236          program31.asm:62
PADR    = $00F0 =   240          program31.asm:6
PBDR    = $00F1 =   241          program31.asm:7
PCDR    = $00F2 =   242          program31.asm:8
PRE     = $C064 = 49252          program31.asm:70
SEGL    = $C072 = 49266          program31.asm:81
SEGR    = $C07B = 49275          program31.asm:90
SP_A    = $C200 = 49664          program31.asm:9
TIM1    = $C09E = 49310          program31.asm:119
TIM2    = $C092 = 49298          program31.asm:110
TIM3    = $C084 = 49284          program31.asm:99
_end    = $C0A7 = 49319          program31.asm:10 (unused)
_size   = $00A7 =   167          program31.asm:10 (unused)


total time: 0.0038 sec.
no errors
